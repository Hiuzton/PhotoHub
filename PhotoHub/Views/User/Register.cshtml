@model PhotoHub.ViewModels.UserViewModel

@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Register</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Register" method="post">
            @Html.AntiForgeryToken()

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group m-1">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>

            <div class="form-group m-1">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group m-1">
                <label asp-for="PasswordHash" class="control-label">Password</label>
                <input asp-for="PasswordHash"
                       class="form-control"
                       type="password"
                       pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@!%*?&])[A-Za-z\d@@!%*?&]{8,}$"
                       title="Password must be at least 8 characters long, include an uppercase letter, a lowercase letter, a number, and a special character."
                       required />
                <span asp-validation-for="PasswordHash" class="text-danger"></span>
            </div>

            <div id="passwordWarning" class="text-danger" style="display: none;">
                Password must be at least 8 characters long, include an uppercase letter, a lowercase letter, a number, and a special character.
            </div>

            <div class="form-group m-1">
                <input type="submit" value="Register" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Login">Already have an account</a>
</div>


<script>
    function validatePassword() {
        const passwordInput = document.getElementById("passwordInput").value;
        const warning = document.getElementById("passwordWarning");
        const pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@!%*?&])[A-Za-z\d@@!%*?&]{8,}$/;

        if (!pattern.test(passwordInput)) {
            warning.style.display = "block"; // Show warning
            return false; // Prevent form submission
        }

        warning.style.display = "none"; // Hide warning
        return true; // Allow form submission
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
